services:
  proxy:
    image: traefik:v3.2.1
    container_name: proxy
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--accesslog=true"
      - "--metrics.prometheus=true"
      - "--tracing.jaeger=true"
      - "--tracing.jaeger.samplingServerURL=http://jaeger:5778/sampling"
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8081:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./data/certs/:/var/traefik/certs/:rw"
      - "./config/traefik.yaml:/etc/traefik/traefik.yaml:ro"
    networks:
      - tech_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"

  scraper:
    image: prom/prometheus
    container_name: scraper
    command: "--config.file=/etc/prometheus/prometheus.yaml"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - tech_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.localhost`)"
      - "traefik.http.routers.prometheus.entrypoints=web"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
    restart: unless-stopped
    ports:
      - "9091:9090"
    
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    command:
      - '--path.rootfs=/host'
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.node-exporter.rule=Host(`node-exporter.localhost`)'
      - 'traefik.http.routers.node-exporter.entrypoints=web'
      - 'traefik.http.services.node-exporter.loadbalancer.server.port=9100'
    networks:
      - tech_net

  visualizer:
    image: grafana/grafana
    container_name: visualizer
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.localhost`)"
      - "traefik.http.routers.grafana.entrypoints=web"
      - "traefik.http.services.grafana.loadbalancer.server.port=3001"
    restart: unless-stopped
    volumes:
      - grafana-data:/var/lib/grafana
    ports:
      - "3001:3000"
    networks:
      - tech_net

  tracer:
    image: jaegertracing/all-in-one
    container_name: tracer
    restart: unless-stopped
    ports:
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
    networks:
      - tech_net


networks:
  tech_net:

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
